-- 아픈 동물 찾기
SELECT ANIMAL_ID, NAME
FROM ANIMAL_INS
WHERE INTAKE_CONDITION = 'Sick';

-- 어린 동물 찾기 
SELECT ANIMAL_ID, NAME
FROM ANIMAL_INS
WHERE INTAKE_CONDITION != 'Aged'

-- 동물의 아이디와 이름
SELECT ANIMAL_ID, NAME
FROM ANIMAL_INS
ORDER BY ANIMAL_ID;

-- ** 내림차순으로 정렬
ORDER BY ANIMAL_ID DESC;

-- ** 여러 기준으로 정렳하기
SELECT ANIMAL_ID, NAME, DATETIME
FROM ANIMAL_INS
ORDER BY NAME, DATETIME DESC;

-- ** 상위 n개 레코드
SELECT NAME
FROM ANIMAL_INS
ORDER BY DATETIME
LIMIT 1;

-- 이름이 있는 동물의 아이디
SELECT ANIMAL_ID
FROM ANIMAL_INS
WHERE NAME != 'NULL'
ORDER BY ANIMAL_ID;

-- ** NULL이 아닌 값 추출
WHERE NAME != 'NULL'
WHERE NAME IS NOT NULL

-- 경기도에 위치한 식품창고 목록 출력하기
SELECT WAREHOUSE_ID, WAREHOUSE_NAME, ADDRESS, COALESCE(FREEZER_YN, 'N') AS FREEZER_YN
FROM FOOD_WAREHOUSE
WHERE WAREHOUSE_NAME LIKE '창고_경기%'
ORDER BY WAREHOUSE_ID ASC;

-- COALESCE(A, B) : A(데이터)가 NULL일 경우 B로 대체
-- IFNULL(A, B) : A(컬럼)의 값이 NULL일 경우 B로 대체

-- _ : 두 번째 글자가 지 인 이름을 찾기
WHERE 이름 LIKE '_지%'

-- % : 0개 이상의 조건 문자
WHERE 이름 LIKE '%철'

-- 흉부외과 또는 일반외과 의사 목록 출력하기
SELECT DR_NAME, DR_ID, MCDP_CD, DATE_FORMAT(HIRE_YMD, '%Y-%m-%d') AS HIRE_YMD
FROM DOCTOR
WHERE MCDP_CD IN ('CS', 'GS')
ORDER BY HIRE_YMD DESC, DR_NAME;
-- ATE_FORMAT을 사용하지 않을 경우 [ YYYY-MM-DD HH-MM-SS ] 와 같은 형식으로
-- OR 조건 : WHERE MCDP_CD IN ('CS', 'GS')

-- 역순 정렬하기
SELECT NAME, DATETIME
FROM ANIMAL_INS
ORDER BY ANIMAL_ID DESC

-- ** MAX : 가장 비싼 상품 구하기
SELECT MAX(PRICE) AS MAX_PRICE
FROM PRODUCT;

-- 나이 정보가 없는 회원 수 구하기
SELECT COUNT(*) AS USERS
FROM USER_INFO
WHERE AGE IS NULL